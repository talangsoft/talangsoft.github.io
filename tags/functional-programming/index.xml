<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>functional programming on Talang Soft Limited</title>
    <link>https://www.talangsoft.org/tags/functional-programming/</link>
    <description>Recent content in functional programming on Talang Soft Limited</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Feb 2016 11:00:59 -0400</lastBuildDate>
    
	<atom:link href="https://www.talangsoft.org/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Functional approach in C#</title>
      <link>https://www.talangsoft.org/post/chapter-2/</link>
      <pubDate>Fri, 12 Feb 2016 11:00:59 -0400</pubDate>
      
      <guid>https://www.talangsoft.org/post/chapter-2/</guid>
      <description>Coming across this blog post about an inefficient C# code written somewhere and somewhen:
for (int i = 0; i &amp;lt;= name.Length - 1; i++) { String sTemp = &amp;quot;&amp;quot;; for (int j = 0; j &amp;lt;= name[i].Length - 1; j++) { if (&amp;quot;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm0123456789_&amp;quot; .Contains(name[i][j])) { sTemp += name[i][j]; } } name[i] = sTemp; } The code meant to take a list of names and remove every not allowed character from them.</description>
    </item>
    
  </channel>
</rss>